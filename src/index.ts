import { app, BrowserWindow, globalShortcut, GlobalShortcut, ipcMain} from 'electron';
import { Directions } from './Directions';
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();

}

let mainWindow: BrowserWindow = null



const createWindow = (): void => {
  // Create the browser window.
  mainWindow = new BrowserWindow({
    height: 1024,
    width: 666,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      nodeIntegration: true,
      contextIsolation:false
  
    },
    alwaysOnTop:true
  });

  

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);
  // Open the DevTools.
  mainWindow.webContents.openDevTools();
};

function registerCommands(){ 
  const commandType = "accelerator-directions" 
  globalShortcut.register('CmdOrCtrl+Left', ()=>{
    mainWindow.webContents.send(commandType, Directions.LEFT)
  })
  globalShortcut.register('CmdOrCtrl+Right', () => { 
    mainWindow.webContents.send(commandType, Directions.RIGHT)
  })
  globalShortcut.register('CmdOrCtrl+Up', () => { 
    mainWindow.webContents.send(commandType, Directions.UP)
  })
  globalShortcut.register('CmdOrCtrl+Down', () => { 
    mainWindow.webContents.send(commandType, Directions.DOWN)
  })
  
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', () => {
  ipcMain.on('register-the-commands', (event) => { 
    registerCommands()
  })
   
  createWindow()
});

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on('will-quit', globalShortcut.unregisterAll)

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.

// set shortcuts
ipcMain.on("program-activated", () => {

})